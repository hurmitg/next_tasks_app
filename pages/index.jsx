import Head from "next/head";
import { useEffect, useState } from "react";
import { useRouter } from "next/navigation";
import axios from "axios";
import { ToastContainer, toast } from "react-nextjs-toast";

export default function Home() {
  const [task, setTask] = useState("");
  const [taskArr, setTaskArr] = useState([]);
  const [user, setUser] = useState("");
  const router = useRouter();
  const date = new Date(Date.now()).toLocaleDateString();

  const handleChange = (e) => {
    setTask(e.target.value);
  };

  const handleAddTask = async () => {
    setTask("");
    try {
      const config = {
        headers: {
          Authorization: `Bearer ${user.token}`,
        },
      };
      await axios.post(`/api/tasks/add`, { task }, config).then((res) => {
        console.log(res);
        setTaskArr(res.data[0].tasks);
      });
      toast.notify("Task Added Successfully !", {
        duration: 5,
        type: "success",
      });
    } catch (e) {
      toast.notify(e.response.data, {
        duration: 5,
        type: "error",
      });
    }
  };

  const fetchTasks = async (user) => {
    try {
      const config = {
        headers: {
          Authorization: `Bearer ${user.token}`,
        },
      };
      await axios.get(`/api/tasks/get`, config).then((res) => {
        setTaskArr(res.data[0].tasks);
      });
    } catch (e) {
      console.log(e);
    }
  };

  const logout = () => {
    localStorage.removeItem("tasksUser");
    router.push("/login");
  };

  useEffect(() => {
    let localUser = JSON.parse(localStorage.getItem("tasksUser"));
    setUser(localUser);
    const verify = async () => {
      if (!localUser) {
        router.push("/login");
      }
    };
    verify();
    fetchTasks(localUser);
  }, []);

  return (
    <>
      <Head>
        <title>Tasks App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link
          href="https://fonts.googleapis.com/css2?family=Barlow+Condensed:ital,wght@0,300;0,400;0,500;0,600;0,700;0,800;1,600;1,700&family=DM+Sans:wght@400;500&family=Poppins:ital,wght@0,100;0,400;0,500;0,600;0,700;0,800;1,100;1,200;1,400;1,500;1,600;1,700;1,800&display=swap"
          rel="stylesheet"
        ></link>
      </Head>

      <ToastContainer align={"right"} position={"bottom"} />
      <button
        className="bg-gray-900 text-sm hover:bg-gray-600 fixed top-10 right-7 text-white font-bold py-2 px-4 rounded-full"
        onClick={logout}
      >
        Log Out
      </button>
      <div className="flex h-full  border-gray-700 w-screen py-2 px-5 m-auto my-5  items-center justify-around">
        <div className="flex flex-col w-screen sm:w-6/12  py-5 m-auto border border-gray-300 shadow-xl p-5 rounded justify-around">
          <div className="w-full">
            <p className="text-gray-700 font-normal tracking-wide text-2xl mb-5">
              Hello
            </p>
            <p className="text-gray-700 capitalize text-4xl font-semibold mb-5">
              {user.username}
            </p>
            <p className="text-gray-700 text-md mb-5">Good to see you here !</p>
          </div>
          <h2 className="my-5 font-bold">Tasks for {date} :</h2>
          <ul className="list-disc rounded border-b-2 border-t-2 px-8 py-3 mb-5">
            {taskArr.length > 0 ? (
              taskArr?.map((task) => {
                return (
                  <li
                    className="hover:underline cursor-pointer mb-3"
                    key={`${task}`}
                  >
                    {task}
                  </li>
                );
              })
            ) : (
              <img
                className="object-contain h-full rounded m-auto"
                src="https://media.tenor.com/qJaXbitGfJMAAAAM/meme-patrick-star.gif"
                alt="No Tasks Added"
              />
            )}
          </ul>
          <div className="flex flex-col items-center">
            <input
              className="shadow appearance-none border rounded w-11/12 mb-5 py-3 px-3 text-gray-700 text-xs leading-tight focus:outline-none focus:shadow-outline"
              value={task}
              type="text"
              name="task"
              disabled={taskArr.length >= 5}
              onChange={handleChange}
              placeholder={
                taskArr.length >= 5
                  ? "Can not add more task (Limit 5)"
                  : "Eg. Need to finish my assignment . . ."
              }
            />
            <button
              className="bg-gray-900 w-11/12 hover:bg-gray-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline"
              type="button"
              onClick={handleAddTask}
            >
              Add New Task
            </button>
          </div>
        </div>
      </div>
    </>
  );
}
